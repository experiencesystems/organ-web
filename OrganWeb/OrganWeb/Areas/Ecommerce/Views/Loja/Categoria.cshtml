@using PagedList;
@model IPagedList<OrganWeb.Areas.Ecommerce.Models.Vendas.Anuncio>
@using PagedList.Mvc;
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Categoria";
    Layout = null;
}

@foreach (var item in Model)
{
    <div class="col-md-6 col-lg-3">
        <div class="product">
            <div class="product-img">
                <img src="@Url.Action("FotoDoAnuncio", "Loja", new { Area = "Ecommerce", anuncio = item.Id })" alt="">
                <div class="product-label">
                    @if (item.Desconto > 0)
                    {
                        <span class="sale">-@Html.DisplayFor(modelItem => item.Desconto)%</span>
                    }
                </div>
            </div>
            <div class="product-body">
                <p class="product-category">@Html.DisplayFor(model => item.Produto.Categorias.Where(x => x.Value == item.Produto.Categoria.ToString()).First().Text)</p>
                <h3 class="product-name"><a href="#">@Html.DisplayFor(modelItem => item.Nome)<br /><i class="icon-room"></i>@Html.DisplayFor(modelItem => item.Anunciante.Endereco.Logradouro.Bairro.Cidade.Nome) - @Html.DisplayFor(modelItem => item.Anunciante.Endereco.Logradouro.Bairro.Cidade.Estado.UF)</a></h3>
                @if (item.Desconto > 0)
                {
                    double valornovo = Math.Round(item.Produto.ValorUnit - ((item.Produto.ValorUnit * item.Desconto??0) / 100), 2, MidpointRounding.ToEven);
                    <h4 class="product-price">
                        R$ @valornovo
                        <del class="product-old-price">R$ @Html.DisplayFor(modelItem => item.Produto.ValorUnit)</del>
                    </h4>
                }
                else
                {
                    <h4 class="product-price">
                        R$ @Html.DisplayFor(modelItem => item.Produto.ValorUnit)
                    </h4>
                }
                <div class="product-rating">
                    @for (var i = 1; i <= item.Estrelas; i++)
                    {
                        <i class="mdi mdi-star"></i>
                    }
                    @if (item.Estrelas < 5)
                    {
                        for (var i = 1; i <= (5 - item.Estrelas); i++)
                        {
                            <i class="mdi mdi-star-outline"></i>
                        }
                    }
                </div>
                <div class="product-btns">
                    @if (Request.IsAuthenticated && item.Anunciante.IdUsuario == User.Identity.GetUserId())
                    {
                        <a class="quick-view" href="@Url.Action("Detalhes", "Anuncio", new { id = item.Id })"><i class="mdi mdi-information-outline"></i><span class="tooltipp" value="Detalhes"></span></a>
                    }
                    else
                    {
                        using (Html.BeginForm("AddWishlist", "Wishlist", new { idAnuncio = item.Id }, FormMethod.Post))
                        {
                            @Html.AntiForgeryToken();
                            <button class="add-to-wishlist" type="submit" value="@item.Id"><i class="mdi mdi-cards-heart"></i><span class="tooltipp" value="Adicionar na lista de desejos"></span></button>
                        }
                        using (Html.BeginForm("AddAoCarrinho", "Carrinho", new { idAnuncio = item.Id }, FormMethod.Post))
                        {
                            @Html.AntiForgeryToken();
                            <button class="add-to-compare" type="submit" value="@item.Id"><i class="mdi mdi-cart-plus"></i><span class="tooltipp" value="Adicionar no carrinho"></span></button>
                        }
                        <a class="quick-view" href="@Url.Action("Detalhes", "Anuncio", new { id = item.Id })"><i class="mdi mdi-information-outline"></i><span class="tooltipp" value="Detalhes"></span></a>
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- /product -->
}
<br />
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, cat = ViewBag.Categoria }), new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "pagination page-item p1" }
            })
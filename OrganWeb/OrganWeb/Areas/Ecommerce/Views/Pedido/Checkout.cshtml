@model OrganWeb.Areas.Ecommerce.Models.Vendas.Pedido
@using OrganWeb.Areas.Ecommerce.Models.API;
@using System.Threading.Tasks;
@using OrganWeb.Models;

@{
    Layout = "~/Views/Shared/_LayoutEcommerce.cshtml";
}

@if (!Request.IsAuthenticated)
{
    <br />
    <h6>Faça login para finalizar sua compra!</h6>
    <div>
        @Html.ActionLink("Login", "Login", "Account", new { area = "Ecommerce" }, new { returnUrl = this.Request.RawUrl })
    </div>
    return;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Checkout</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.Data)
        @Html.HiddenFor(model => model.Status)
        @Html.HiddenFor(model => model.IdUsuario)

        <div class="form-horizontal">
            <h4>Pedido</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Anuncio.Produto.Nome)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Anuncio.Produto.ValorUnit)
                    </th>
                    <th>
                        Quantidade
                    </th>
                    <th></th>
                </tr>
                @foreach (var item in Model.Carrinhos)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Anuncio.Produto.Nome)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Anuncio.Produto.ValorUnit)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Qtd)
                        </td>
                    </tr>
                }
            </table>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Subtotal)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Subtotal)
                </dd>
            </dl>
            <div class="form-group">
                @Html.LabelFor(model => model.CEPEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CEPEntrega, new { htmlAttributes = new { @class = "form-control", @id = "cepe" } })
                    @Html.ValidationMessageFor(model => model.CEPEntrega, "", new { @class = "text-danger" })
                </div>
            </div>
            <input type="button" id="valorcepe" value="Calcular valor do frete" />
            <p></p>
            <div class="form-group">
                @Html.LabelFor(model => model.Endereco.Logradouro.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Endereco.Logradouro.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Logradouro.Nome, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NumEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumEntrega, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumEntrega, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CompEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CompEntrega, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CompEntrega, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Endereco.Logradouro.Bairro.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Endereco.Logradouro.Bairro.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Logradouro.Bairro.Nome, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Endereco.Logradouro.Bairro.Cidade.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Endereco.Logradouro.Bairro.Cidade.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Logradouro.Bairro.Cidade.Nome, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Endereco.Logradouro.Bairro.Cidade.IdEstado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Endereco.Logradouro.Bairro.Cidade.IdEstado, new SelectList(Model.Endereco.Logradouro.Bairro.Cidade.Estados, "Id", "UF"), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Logradouro.Bairro.Cidade.IdEstado, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Criar pedido" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    @{
        if (ViewBag.SuccessMessage != null)
        {
            <div>
                @ViewBag.SuccessMessage
                @Html.ActionLink("Acompanhe seu pedido", "Index", "Pedido")
            </div>
            return;
        }
    }

    <div>
        @Html.ActionLink("Voltar ao carrinho", "Index", "Carrinho")
    </div>

    @section Scripts
    {
        <script type="text/javascript">
            $(document).ready(function () {
                var button = document.getElementById('valorcepe');
                button.addEventListener('click', function () {
                    var cepe = document.getElementById('cepe').value;
                    var check = $(".cepe").val();
                    if (check != "") {
                        $.ajax({
                            url: '@Url.Action("PostFrete", "Pedido")',
                            type: "POST",
                            cache: false,
                            data: { "cep": cepe },
                            success: function (data) {
                                if (data.result == true)
                                {
                                    $("p").html(data.frete);
                                } else {
                                    alert('Não foi possível completar seu pedido.');
                                }
                            }
                        });
                    }
                });
            });
        </script>
    }
</body>
</html>

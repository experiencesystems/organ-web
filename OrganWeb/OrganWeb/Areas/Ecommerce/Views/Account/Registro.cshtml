@model OrganWeb.Areas.Ecommerce.Models.Usuarios.RegisterViewModel
@{
    ViewBag.Title = "Registre-se";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>

    <meta charset='utf-8' />
    <meta name="viewport" content="width=device-width" />

    @Styles.Render("~/Content/bootstrap.css")
    @Styles.Render("~/Content/registro.css")

</head>
<body class="form-v7">
    <div class="page-content">
        <div class="form-v7-content">
            <div class="form-left">
                <img src="~/Imagens/registro.png" alt="form">
                <p class="text-2">Termos de uso</p>
            </div>
            @using (Html.BeginForm("Registro", "Account", FormMethod.Post, new { @class = "form-detail", role = "form", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary("", new { @class = "text-danger" })
                <p class="text-1">Seja bem-vindo ao Organ ecommerce!</p>
                <div class="form-row">
                    @Html.LabelFor(m => m.Foto, new { @class = "form-label" })
                    <input type="file" name="Foto" id="fileUpload" accept=".png,.jpg,.jpeg" />
                </div>
                <div class="form-row">
                    <div class="col-6">
                        @Html.LabelFor(m => m.UserName, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.UserName, new { @class = "input-text" })
                    </div>
                    <div class="col-6">
                        @Html.LabelFor(m => m.CPF, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.CPF, new { @class = "input-text" })
                        @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.Email, new { @class = "input-text" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-row">
                    <div class="col-6">
                        @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                        @Html.PasswordFor(m => m.Password, new { @class = "input-text" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-6">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "form-label" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input-text" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row-last">
                    <input type="submit" name="register" class="register" value="Registrar-se">
                    <p>ou<a href="#">Faça o login</a></p>
                </div>
            }
        </div>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
        <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
        <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>
    }

</body>
</html>

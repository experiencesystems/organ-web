@model OrganWeb.Areas.Sistema.Models.Ferramentas.Maquina

@using (Html.BeginForm("Create", "Maquina", FormMethod.Post))
{
    @Html.AntiForgeryToken()
<<<<<<< Updated upstream
    
    <div class="form-horizontal">
        <h4>Maquina</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tipo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Desc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VidaUtil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VidaUtil, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VidaUtil, "", new { @class = "text-danger" })
=======

    <div class="form-horizontal">
        <h4 class="modal-title">Máquina</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control campo" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col">
                @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Tipo, new { htmlAttributes = new { @class = "form-control campo" } })
                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Desc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-6">
                @Html.LabelFor(model => model.DeprMes, htmlAttributes: new { @class = "control-label" })
            </div>

            <div class="col-sm-6">
                @Html.LabelFor(model => model.DeprAno, htmlAttributes: new { @class = "control-label" })
            </div>

            <div class="col-sm-6">
                <div class="input-group date">
                    @Html.EditorFor(model => model.DeprMes, new { htmlAttributes = new { @class = "form-control campo" } })
                    @Html.ValidationMessageFor(model => model.DeprMes, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                @Html.EditorFor(model => model.DeprAno, new { htmlAttributes = new { @class = "form-control campo" } })
                @Html.ValidationMessageFor(model => model.DeprAno, "", new { @class = "text-danger" })
>>>>>>> Stashed changes
            </div>
        </div>

        <div class="form-group">
<<<<<<< Updated upstream
            @Html.LabelFor(model => model.ValorInicial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorInicial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorInicial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeprMes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeprMes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeprMes, "", new { @class = "text-danger" })
=======
            <div class="col">
                @Html.LabelFor(model => model.VidaUtil, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.VidaUtil, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VidaUtil, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-6">
                @Html.LabelFor(model => model.Estoque.ValorUnit, htmlAttributes: new { @class = "control-label" })
            </div>

            <div class="col-sm-6">
                @Html.LabelFor(model => model.ValorInicial, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="col-sm-6">
                @Html.EditorFor(model => model.Estoque.ValorUnit, new { htmlAttributes = new { @class = "form-control campo" } })
                @Html.ValidationMessageFor(model => model.Estoque.ValorUnit, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                @Html.EditorFor(model => model.ValorInicial, new { htmlAttributes = new { @class = "form-control campo" } })
                @Html.ValidationMessageFor(model => model.ValorInicial, "", new { @class = "text-danger" })
>>>>>>> Stashed changes
            </div>
        </div>

        <div class="form-group">
<<<<<<< Updated upstream
            @Html.LabelFor(model => model.DeprAno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeprAno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeprAno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataCadastro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataCadastro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataCadastro, "", new { @class = "text-danger" })
=======
            <div class="col">
                @Html.LabelFor(model => model.DataCadastro, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.DataCadastro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataCadastro, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col">
                @Html.LabelFor(model => model.Estoque.Qtd, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Estoque.Qtd, new { htmlAttributes = new { @class = "form-control campo" } })
                @Html.ValidationMessageFor(model => model.Estoque.Qtd, "", new { @class = "text-danger" })
>>>>>>> Stashed changes
            </div>
        </div>

        <div class="form-group">
<<<<<<< Updated upstream
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
=======
            @Html.LabelFor(model => model.Estoque.UM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*TA DANO MERDA AKI*@
                @Html.DropDownListFor(model => model.Estoque.UM, Model.Estoque.UnidadesDeMedida, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Estoque.UM, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-addmodal" data-save="ajax-modal">Adicionar</button>
>>>>>>> Stashed changes
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@model OrganWeb.Areas.Sistema.Models.Estoque.Item


@using (Html.BeginForm("_NovoItem", "Estoque", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cadastrar item</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group row">
            <label class="col-sm-8 col-form">@Html.LabelFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })</label>
            <div class="col-sm-8">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome" } })
                @Html.ValidationMessageFor(modelItem => modelItem.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-8 col-form">@Html.LabelFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })</label>
            <div class="col-sm-8">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control", @placeholder = "Descrição" } })
                @Html.ValidationMessageFor(modelItem => modelItem.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-8 col-form">@Html.LabelFor(model => model.ValorUnit, new { htmlAttributes = new { @class = "form-control" } })</label>
            <div class="col-sm-8">
                @Html.EditorFor(model => model.ValorUnit, new { htmlAttributes = new { @class = "form-control", @placeholder = "Valor unitário" } })
                @Html.ValidationMessageFor(modelItem => modelItem.ValorUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-8 col-form">@Html.LabelFor(model => model.Estoque.Quantidade, new { htmlAttributes = new { @class = "form-control" } })</label>
            <div class="col-sm-8">
                @Html.EditorFor(model => model.Estoque.Quantidade, new { htmlAttributes = new { @class = "form-control", @placeholder = "Quantidade" } })
                @Html.ValidationMessageFor(modelItem => modelItem.Estoque.Quantidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-8 col-form">@Html.LabelFor(model => model.Estoque.UnidadeMedida, new { htmlAttributes = new { @class = "form-control" } })</label>
            <div class="col-sm-8">
                @Html.EditorFor(model => model.Estoque.UnidadeMedida, new { htmlAttributes = new { @class = "form-control", @placeholder = "Unidade de medida" } })
                @Html.ValidationMessageFor(modelItem => modelItem.Estoque.UnidadeMedida, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-group mb-3">
            @Html.DropDownListFor(model => model.IdFornecedor, new SelectList(Model.Fornecedors, "Id", "Nome", Model.IdFornecedor), "Selecionar fornecedor")
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button">Novo</button>
            </div>
            @Html.ValidationMessageFor(modelItem => modelItem.IdFornecedor, "", new { @class = "text-danger" })
        </div>

        <div class="input-group mb-3">
            @Html.DropDownListFor(model => model.IdCategoria, new SelectList(Model.Categorias, "Id", "Nome", Model.IdCategoria), "Selecionar categoria")
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button">Novo</button>
            </div>
            @Html.ValidationMessageFor(modelItem => modelItem.IdCategoria, "", new { @class = "text-danger" })
        </div>

        <div class="modal-footer">
            <button type="submit" class="btn btn-success m-b-0" data-save="ajax-modal">Adicionar</button>
        </div>

    </div>
    }

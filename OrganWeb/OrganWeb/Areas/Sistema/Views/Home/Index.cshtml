@{
    ViewBag.Title = "Início";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="section">
    <div class="section-body">
        <div class="row">
            <!-- Vendas gráfico-->
            <div class="col-lg-8 col-md-12 col-12 col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h6 class="card-title box-title">Vendas</h6>
                        <div class="card-header-right">
                            <ul class="list-unstyled card-option">
                                <li><i class="ti-minus minimize-card"></i></li>
                                <li><i class="icon-refresh"></i></li>
                            </ul>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-content">
                            <div id="chartdiv" style="height:300px"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-md-12 col-12 col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h6 class="card-title box-title">Clima</h6>
                        <div class="card-header-right">
                            <ul class="list-unstyled card-option">
                                <li><i class="ti-minus minimize-card"></i></li>
                                <li><i class="icon-refresh"></i></li>
                            </ul>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-content">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <!--Cotações-->
            <div class="col-xl-4 col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h6 class="card-title box-title">Cotação</h6>
                        <div class="card-header-right">
                            <ul class="list-unstyled card-option">
                                <li><i class="ti-minus minimize-card"></i></li>
                                <li><i class="icon-refresh"></i></li>
                            </ul>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-content">
                            <iframe src="https://br.widgets.investing.com/live-commodities?theme=darkTheme&pairs=8832,8917,8918,8916,8891,8915" width="100%" height="450" frameborder="0" allowtransparency="true" marginwidth="0" marginheight="0"></iframe>
                        </div>
                    </div>
                </div>
            </div>

            <!--Mapa-->
            <div class="col-xl-8 col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h6 class="card-title box-title">Mapa</h6>
                        <div class="card-header-right">
                            <ul class="list-unstyled card-option">
                                <li><i class="ti-minus minimize-card"></i></li>
                                <li><i class="icon-refresh"></i></li>
                            </ul>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-content">
                            <div id="map" style="width: 100%; height: 455px; border: 1px solid #ccc"></div>
                        </div> <!-- /.card-body -->
                    </div><!-- /.card -->
                </div>
            </div>
            <!--Fim mapa-->
        </div>
    </div>
</section>

<script src="https://www.amcharts.com/lib/4/core.js"></script>
<script src="https://www.amcharts.com/lib/4/charts.js"></script>
<script src="https://www.amcharts.com/lib/4/themes/animated.js"></script>

<script>
    var osmUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
        osmAttrib = '&copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors',
        osm = L.tileLayer(osmUrl, { maxZoom: 18, attribution: osmAttrib }),
        map = new L.Map('map', { center: new L.LatLng(-23.5489, -46.6388), zoom: 15 }),
        drawnItems = L.featureGroup().addTo(map);

    L.control.layers({
        "osm": osm.addTo(map),
        "google": L.tileLayer('http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}', {
            attribution: 'google'
        })
    }, { 'drawlayer': drawnItems }, { position: 'topright', collapsed: false }).addTo(map);

    map.addControl(new L.Control.Draw({
        edit: {
            featureGroup: drawnItems,
            poly: {
                allowIntersection: false
            }
        },
        draw: {
            polygon: {
                allowIntersection: false,
                showArea: true
            }
        }
    }));

    // Truncate value based on number of decimals
    var _round = function (num, len) {
        return Math.round(num * (Math.pow(10, len))) / (Math.pow(10, len));
    };
    // Helper method to format LatLng object (x.xxxxxx, y.yyyyyy)
    var strLatLng = function (latlng) {
        return "(" + _round(latlng.lat, 6) + ", " + _round(latlng.lng, 6) + ")";
    };

    // Generate popup content based on layer type
    // - Returns HTML string, or null if unknown object
    var getPopupContent = function (layer) {
        // Marker - add lat/long
        if (layer instanceof L.Marker || layer instanceof L.CircleMarker) {
            return strLatLng(layer.getLatLng());
            // Circle - lat/long, radius
        } else if (layer instanceof L.Circle) {
            var center = layer.getLatLng(),
                radius = layer.getRadius();
            return "Center: " + strLatLng(center) + "<br />"
                + "Radius: " + _round(radius, 2) + " m";
            // Rectangle/Polygon - area
        } else if (layer instanceof L.Polygon) {
            var latlngs = layer._defaultShape ? layer._defaultShape() : layer.getLatLngs(),
                area = L.GeometryUtil.geodesicArea(latlngs);
            return "Area: " + L.GeometryUtil.readableArea(area, true);
            // Polyline - distance
        } else if (layer instanceof L.Polyline) {
            var latlngs = layer._defaultShape ? layer._defaultShape() : layer.getLatLngs(),
                distance = 0;
            if (latlngs.length < 2) {
                return "Distance: N/A";
            } else {
                for (var i = 0; i < latlngs.length - 1; i++) {
                    distance += latlngs[i].distanceTo(latlngs[i + 1]);
                }
                return "Distance: " + _round(distance, 2) + " m";
            }
        }
        return null;
    };

    // Object created - bind popup to layer, add to feature group
    map.on(L.Draw.Event.CREATED, function (event) {
        var layer = event.layer;
        var content = getPopupContent(layer);
        if (content !== null) {
            layer.bindPopup(content);
        }
        drawnItems.addLayer(layer);
    });

    // Object(s) edited - update popups
    map.on(L.Draw.Event.EDITED, function (event) {
        var layers = event.layers,
            content = null;
        layers.eachLayer(function (layer) {
            content = getPopupContent(layer);
            if (content !== null) {
                layer.setPopupContent(content);
            }
        });
    });
</script>
<!-- Chart code -->
<script>
    am4core.ready(function () {
        // Themes begin
        am4core.useTheme(am4themes_animated);
        // Themes end
        // Create chart instance

        var chart = am4core.create("chartdiv", am4charts.XYChart);
        // Add data
        chart.data = [{
            "date": "2013-11-16",
            "market1": 71,
            "market2": 75,
            "sales1": 5,
            "sales2": 8
        }, {
                "date": "2013-11-17",
            "market1": 74,
            "market2": 78,
            "sales1": 4,
            "sales2": 6
        }, {
            "date": "2013-11-18",
            "market1": 78,
            "market2": 88,
            "sales1": 5,
            "sales2": 2
        }, {
            "date": "2013-11-19",
            "market1": 85,
            "market2": 89,
            "sales1": 8,
            "sales2": 9
        }, {
            "date": "2013-11-20",
            "market1": 82,
            "market2": 89,
            "sales1": 9,
            "sales2": 6
        }, {
            "date": "2013-11-21",
            "market1": 83,
            "market2": 85,
            "sales1": 3,
            "sales2": 5
        }, {
            "date": "2013-11-22",
            "market1": 88,
            "market2": 92,
            "sales1": 5,
            "sales2": 7
        }, {
            "date": "2013-11-23",
            "market1": 85,
            "market2": 90,
            "sales1": 7,
            "sales2": 6
        }, {
            "date": "2013-11-24",
            "market1": 85,
            "market2": 91,
            "sales1": 9,
            "sales2": 5
        }, {
            "date": "2013-11-25",
            "market1": 80,
            "market2": 84,
            "sales1": 5,
            "sales2": 8
        }, {
            "date": "2013-11-26",
            "market1": 87,
            "market2": 92,
            "sales1": 4,
            "sales2": 8
        }, {
            "date": "2013-11-27",
            "market1": 84,
            "market2": 87,
            "sales1": 3,
            "sales2": 4
        }, {
            "date": "2013-11-28",
            "market1": 83,
            "market2": 88,
            "sales1": 5,
            "sales2": 7
        }, {
            "date": "2013-11-29",
            "market1": 84,
            "market2": 87,
            "sales1": 5,
            "sales2": 8
        }, {
            "date": "2013-11-30",
            "market1": 81,
            "market2": 85,
            "sales1": 4,
            "sales2": 7
        }];

        // Create axes
        var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
        //dateAxis.renderer.grid.template.location = 0;
        //dateAxis.renderer.minGridDistance = 30;
        var valueAxis1 = chart.yAxes.push(new am4charts.ValueAxis());
        valueAxis1.title.text = "Vendas";
        var valueAxis2 = chart.yAxes.push(new am4charts.ValueAxis());
        valueAxis2.title.text = "Dias";
        valueAxis2.renderer.opposite = true;
        valueAxis2.renderer.grid.template.disabled = true;
        // Create series
        var series1 = chart.series.push(new am4charts.ColumnSeries());
        series1.dataFields.valueY = "sales1";
        series1.dataFields.dateX = "date";
        series1.yAxis = valueAxis1;
        series1.name = "Custo por ha.";
        series1.tooltipText = "{name}\n[bold font-size: 17]R${valueY}M[/]";
        series1.fill = am4core.color("#09b76b");
        series1.strokeWidth = 0;
        series1.clustered = false;
        series1.columns.template.width = am4core.percent(40);

        var series2 = chart.series.push(new am4charts.ColumnSeries());
        series2.dataFields.valueY = "sales2";
        series2.dataFields.dateX = "date";
        series2.yAxis = valueAxis1;
        series2.name = "Lucro por ha.";
        series2.tooltipText = "{name}\n[bold font-size: 17]R${valueY}M[/]";
        series2.fill = am4core.color("#07814c");
        series2.strokeWidth = 0;
        series2.clustered = false;
        series2.toBack();

        var series3 = chart.series.push(new am4charts.LineSeries());
        series3.dataFields.valueY = "market1";
        series3.dataFields.dateX = "date";
        series3.name = "Produtividade";
        series3.strokeWidth = 2;
        series3.tensionX = 0.7;
        series3.yAxis = valueAxis2;
        series3.stroke = am4core.color("#FDD835");
        series3.tooltipText = "{name}\n[bold font-size: 17]{valueY}[/]";

        var bullet3 = series3.bullets.push(new am4charts.CircleBullet());
        bullet3.circle.radius = 3;
        bullet3.circle.strokeWidth = 2;
        bullet3.circle.fill = am4core.color("#fff");

        var series4 = chart.series.push(new am4charts.LineSeries());
        series4.dataFields.valueY = "market2";
        series4.dataFields.dateX = "date";
        series4.name = "Perdas";
        series4.strokeWidth = 2;
        series4.tensionX = 0.7;
        series4.yAxis = valueAxis2;
        series4.tooltipText = "{name}\n[bold font-size: 17]{valueY}[/]";
        series4.stroke = am4core.color("#e84118");
        series4.strokeDasharray = "3,3";

        var bullet4 = series4.bullets.push(new am4charts.CircleBullet());
        bullet4.circle.radius = 3;
        bullet4.circle.strokeWidth = 2;
        bullet4.circle.fill = am4core.color("#fff");

        // Add cursor
        chart.cursor = new am4charts.XYCursor();

        // Add legend
        chart.legend = new am4charts.Legend();
        chart.legend.position = "top";

    }); // end am4core.ready()
</script>
